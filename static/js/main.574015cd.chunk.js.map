{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","code","setCode","message","setMessage","ciudad","setCiudad","average","setAverage","useEffect","fetch","then","res","json","server","data","cod","showData","map","city","className","name","sys","country","main","temp","toFixed","weather","src","icon","description","wind","speed","deg","pressure","humidity","temp_min","temp_max","coord","lon","lat","allowFullScreen","loading","type","id","htmlFor","onClick","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.574015cd.chunk.js","sourcesContent":["import './App.css';\r\nimport {useState,useEffect} from \"react\"\r\nimport \"./header.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  /* Variables */\r\n\r\n  let [list, setList] = useState([])\r\n  let [code, setCode] = useState([])\r\n  let [message, setMessage] = useState([])\r\n  let [ciudad, setCiudad] = useState(\"almeria\")\r\n  let [average, setAverage] = useState(0)\r\n\r\n  /* Get data from api */\r\n  \r\n  useEffect(function(){\r\n    fetch(`https://weather-page-server.herokuapp.com/weather/${ciudad}`).then((res)=>res.json()).then((server)=>{\r\n   \r\n      setList(server.data.list)\r\n      setCode(server.data.cod)\r\n      setMessage(server.data.message)    \r\n\r\n    })\r\n\r\n    fetch(`https://weather-page-server.herokuapp.com/weather/average`).then((res)=>res.json()).then((server)=>{\r\n   \r\n         setAverage(server.average)\r\n\r\n    })\r\n\r\n\r\n},[ciudad])\r\n\r\nfunction almeria() {\r\n  setCiudad(\"almeria\")\r\n}\r\nfunction cadiz() {\r\n  setCiudad(\"cadiz\")\r\n}\r\nfunction cordoba() {\r\n  setCiudad(\"cordoba\")\r\n}\r\nfunction granada() {\r\n  setCiudad(\"granada\")\r\n}\r\nfunction huelva() {\r\n  setCiudad(\"huelva\")\r\n}\r\nfunction jaen() {\r\n  setCiudad(\"jaen\")\r\n}\r\nfunction malaga() {\r\n  setCiudad(\"malaga\")\r\n}\r\nfunction sevilla() {\r\n  setCiudad(\"sevilla\")\r\n}\r\n\r\nlet showData = list.map(city=>{\r\n  return(<>\r\n    <div className=\"card\">\r\n      <div className=\"card__top\">\r\n        <div className=\"card__intro\">\r\n          <h1 className=\"card__title\">{city.name}</h1>\r\n          <div className=\"card__meta\">\r\n            <p>{city.sys.country}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__options\">\r\n          <div className=\"card__options-cell\" >\r\n            <h3>Weather</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card__bottom\">\r\n        <div className=\"panel weather-panel\">\r\n          <div className=\"weather-panel__cell weather-panel__cell--main\">\r\n            <div className=\"temp_date\">\r\n              <h2>{(city.main.temp-273.15).toFixed(1)}<span>&deg;</span></h2>\r\n            </div>\r\n            {city.weather.map(weather=>{\r\n              return(<>\r\n                <div className=\"icon_details\">\r\n                  <div className=\"icon\">\r\n                    <div className=\"weather-icon\"><img src={`https://openweathermap.org/img/w/${weather.icon}.png`}/></div>\r\n                  </div>\r\n                  <h3>{weather.main}</h3>\r\n                  <p>{weather.description}</p>\r\n                </div>\r\n              </>)\r\n            })}\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Average <span className=\"weather-icon material-icons\">thermostat</span></p>\r\n            <p>{average} &deg;</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Wind speed <span className=\"weather-icon material-icons\">air</span></p>\r\n            <p>{city.wind.speed} km/h</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Wind deg <span className=\"weather-icon material-icons\">explore</span></p>\r\n            <p>{city.wind.deg} &deg;</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Pressure <span className=\"weather-icon material-icons\">expand</span></p>\r\n            <p>{(city.main.pressure/1000).toFixed(2)} bar</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Humidity  <span className=\"weather-icon material-icons\">invert_colors</span></p>\r\n            <p>{city.main.humidity} %</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Min ºC  <span className=\"weather-icon material-icons\">ac_unit</span></p>\r\n            <p>{(city.main.temp_min-273.15).toFixed(1)} &deg;</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Max ºC <span className=\"weather-icon material-icons\">local_fire_department</span></p>\r\n            <p>{(city.main.temp_max-273.15).toFixed(1)} &deg;</p>\r\n          </div>\r\n        </div>       \r\n      </div>\r\n      <div className=\"card__options\">\r\n          <div className=\"card__options-cell\" >\r\n            <h3>UBICATION</h3>\r\n          </div>\r\n      </div>\r\n      {/* Google Map with coordinates given by the API */}\r\n      <div className=\"card__bottom\">\r\n        <iframe src={`https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d18063.645919365044!2d${city.coord.lon}!3d${city.coord.lat}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMzbCsDUwJzI5LjAiTiAywrAyNyc0Ni40Ilc!5e0!3m2!1ses!2ses!4v1624316625877!5m2!1ses!2ses`} className=\"map\" allowFullScreen=\"\" loading=\"lazy\"></iframe>\r\n      </div>\r\n    </div>\r\n  </>)\r\n})\r\n \r\nif (code === \"200\") {\r\n  return (<>\r\n  <section className=\"header-section\">\r\n               \r\n                <input className=\"menu-header-btn\" type=\"checkbox\" id=\"menu-header-btn\"/>\r\n                <label className=\"menu-header-icon\" htmlFor=\"menu-header-btn\">\r\n                    <span className=\"navicon\"></span>\r\n                </label>\r\n                <ul className=\"menu-header\">\r\n                    <li>\r\n                        <div onClick={almeria} className=\"header-camisetas\" to=\"/camisetas\"><a>Almeria</a></div>\r\n                    </li>\r\n                    <li>\r\n                        <div onClick={cadiz} className=\"header-comics\" to=\"/comics\"><a>Cadiz</a></div>\r\n                    </li>\r\n                    <li>\r\n                        <div onClick={cordoba} className=\"header-libros\" to=\"/libros\"><a>Cordoba</a></div>\r\n                    </li>\r\n                    <li>\r\n                        <div onClick={granada} className=\"header-peliculas\" to=\"/peliculas\"><a>Granada</a></div>\r\n                    </li>\r\n                    <li>\r\n                        <div onClick={huelva} className=\"header-zapatillas\" to=\"/zapatillas\"><a>Huelva</a></div>\r\n                    </li>\r\n                    <li>\r\n                        <div onClick={jaen} className=\"header-zapatillas\" to=\"/zapatillas\"><a>Jaen</a></div>\r\n                    </li>\r\n                    <li>\r\n                        <div onClick={malaga} className=\"header-zapatillas\" to=\"/zapatillas\"><a>Malaga</a></div>\r\n                    </li>\r\n                    <li>\r\n                        <div onClick={sevilla} className=\"header-zapatillas\" to=\"/zapatillas\"><a>Sevilla</a></div>\r\n                    </li>\r\n                   \r\n                </ul>\r\n            </section>\r\n    {showData}\r\n  </>);\r\n} else {\r\n  return(<>\r\n  <h1>{message}</h1>\r\n  <p>Error: {code}</p>\r\n  </>)\r\n}\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}