{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","code","setCode","message","setMessage","useEffect","fetch","then","res","json","server","data","cod","showData","map","city","className","name","sys","country","main","temp","toFixed","weather","src","icon","description","wind","speed","deg","pressure","humidity","temp_min","temp_max","coord","lon","lat","allowfullscreen","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0cfcbd5.chunk.js","sourcesContent":["import './App.css';\r\nimport {useState,useEffect} from \"react\"\r\n\r\nfunction App() {\r\n\r\n  let [list, setList] = useState([])\r\n  let [code, setCode] = useState([])\r\n  let [message, setMessage] = useState([])\r\n  \r\n  useEffect(function(){\r\n    fetch(\"https://weather-page-server.herokuapp.com/weather\").then((res)=>res.json()).then((server)=>{\r\n   \r\n      setList(server.data.list)\r\n      setCode(server.data.cod)\r\n      setMessage(server.data.message)    \r\n     \r\n    })\r\n \r\n},[])\r\n\r\nlet showData = list.map(city=>{\r\n  return(<>\r\n    <div className=\"card\">\r\n      <div className=\"card__top\">\r\n        <div className=\"card__intro\">\r\n          <h1 className=\"card__title\">{city.name}</h1>\r\n          <div className=\"card__meta\">\r\n            <p>{city.sys.country}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__options\">\r\n          <div className=\"card__options-cell\" >\r\n            <h3>Weather</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card__bottom\">\r\n        <div className=\"panel weather-panel\">\r\n          <div className=\"weather-panel__cell weather-panel__cell--main\">\r\n            <div className=\"temp_date\">\r\n              <h2>{(city.main.temp-273.15).toFixed(1)}<span>&deg;</span></h2>\r\n            </div>\r\n            {city.weather.map(weather=>{\r\n              return(<>\r\n                <div className=\"icon_details\">\r\n                  <div className=\"icon\">\r\n                    {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 612 612\">\r\n                      <path d=\"M365.707 134.34c12.375 0 22.39-10.03 22.39-22.39V67.17c0-12.358-10.015-22.39-22.39-22.39-12.374 0-22.39 10.03-22.39 22.39v44.78c0 12.36 10.016 22.39 22.39 22.39zm87.01 248.787c24.478-23.122 39.868-55.736 39.868-92.054 0-70.052-56.812-126.878-126.878-126.878-42.108 0-79.336 20.6-102.413 52.184-14.822-4.658-30.48-7.405-46.855-7.405-83.308 0-151.24 65.036-156.255 147.09C24.435 374.752 0 412.114 0 455.268c0 61.84 50.11 111.95 111.95 111.95H410.49c53.587 0 97.023-43.438 97.023-97.024.002-38.408-22.433-71.35-54.794-87.07zm-87.01-174.15c45.273 0 82.098 36.824 82.098 82.097 0 14.94-4.21 28.854-11.24 40.914-17.613-36.347-54.243-61.737-97.023-63.125-9.853-12.494-21.66-23.33-34.795-32.347 15.016-16.808 36.69-27.54 60.96-27.54zm44.78 313.462H111.952c-37.032 0-67.17-30.14-67.17-67.172 0-25.062 13.853-47.87 36.153-59.514l22.405-11.718 1.538-25.24c3.612-58.902 52.617-105.04 111.563-105.04 34.435 0 66.468 15.612 87.918 42.824l12.897 16.375 20.838.672c36.406 1.18 64.932 30.614 64.932 67.006v29.84l27.555 11.493c19.524 8.15 32.152 27.077 32.152 48.23 0 28.808-23.435 52.243-52.244 52.243zm74.635-328.39c6.18 0 11.777-2.51 15.822-6.554l29.854-29.854c4.06-4.06 6.568-9.658 6.568-15.837 0-12.36-10.017-22.39-22.39-22.39-6.18 0-11.778 2.508-15.823 6.568L469.3 155.836c-4.06 4.045-6.568 9.643-6.568 15.823 0 12.358 10.016 22.39 22.39 22.39zm-254.667-6.554c4.06 4.045 9.658 6.553 15.837 6.553 12.36 0 22.39-10.032 22.39-22.39 0-6.18-2.507-11.778-6.567-15.838l-29.854-29.854c-4.044-4.045-9.642-6.553-15.82-6.553-12.36 0-22.39 10.03-22.39 22.39 0 6.18 2.507 11.777 6.567 15.823l29.838 29.868zm359.154 81.187h-44.78c-12.36 0-22.39 10.03-22.39 22.39s10.03 22.39 22.39 22.39h44.78c12.358 0 22.39-10.03 22.39-22.39s-10.03-22.39-22.39-22.39z\"/>\r\n                    </svg> */}\r\n                    <div className=\"weather-icon\"><img src={`https://openweathermap.org/img/w/${weather.icon}.png`}/></div>\r\n                  </div>\r\n                  <h3>{weather.main}</h3>\r\n                  <p>{weather.description}</p>\r\n                </div>\r\n              </>)\r\n            })}\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Wind speed <span className=\"weather-icon material-icons\">air</span></p>\r\n            <p>{city.wind.speed} km/h</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Wind deg <span className=\"weather-icon material-icons\">explore</span></p>\r\n            <p>{city.wind.deg} &deg;</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Pressure <span className=\"weather-icon material-icons\">expand</span></p>\r\n            <p>{(city.main.pressure/1000).toFixed(2)} bar</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Humidity  <span className=\"weather-icon material-icons\">invert_colors</span></p>\r\n            <p>{city.main.humidity} %</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Min ºC  <span className=\"weather-icon material-icons\">ac_unit</span></p>\r\n            <p>{(city.main.temp_min-273.15).toFixed(1)} &deg;</p>\r\n          </div>\r\n          <div className=\"weather-panel__cell\">\r\n            <p className=\"round\">Max ºC <span className=\"weather-icon material-icons\">local_fire_department</span></p>\r\n            <p>{(city.main.temp_max-273.15).toFixed(1)} &deg;</p>\r\n          </div>\r\n        </div>       \r\n      </div>\r\n      <div className=\"card__options\">\r\n          <div className=\"card__options-cell\" >\r\n            <h3>UBICATION</h3>\r\n          </div>\r\n      </div>\r\n      \r\n      <div className=\"card__bottom\">\r\n          <iframe src={`https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d18063.645919365044!2d${city.coord.lon}!3d${city.coord.lat}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMzbCsDUwJzI5LjAiTiAywrAyNyc0Ni40Ilc!5e0!3m2!1ses!2ses!4v1624316625877!5m2!1ses!2ses`} className=\"map\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\r\n      </div>\r\n    </div>\r\n  </>)\r\n})\r\n \r\nif (code === \"200\") {\r\n  return (<>\r\n    {showData}\r\n  </>);\r\n} else {\r\n  return(<>\r\n  <h1>{message}</h1>\r\n  <p>Error: {code}</p>\r\n  </>)\r\n}\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}